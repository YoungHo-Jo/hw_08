/*
 * main.c
 *
 *  Created on: 2017. 10. 14.
 *      Author: hw_8
 */

#include "stm32f10x.h"
#include "stm32f10x_gpio.h"
#include "stm32f10x_rcc.h"
#include "stm32f10x_usart.h"
#include "stm32f10x_exti.h"
#include "misc.h"
#include "core_cm3.h"

void delay(volatile unsigned time) {
   for(;time>0;time--)
      ;
}

void sendData_USART1() { // PC로 메시지를 보내기 위한 함수
   char rvData;
   // 블루투스 통신으로부터(USART2로부터) 온 메시지를 수신
   while(USART_GetFlagStatus(USART2, USART_FLAG_RXNE) == RESET);
   rvData = USART_ReceiveData(USART2);

   // 받아온 메시지를 USART1을 통해 PC로 전송
   while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
   USART_SendData(USART1, rvData);
}

void sendData_USART2() { // 블루투스 통신으로 메시지를 보내기 위한 함수
   char rvData;
   // PC로부터 메시지가 오면 USART1을 통해 수신
   while(USART_GetFlagStatus(USART1, USART_FLAG_RXNE) == RESET);
   rvData = USART_ReceiveData(USART1);

   // PC로부터 수신한 메시지를 USART2를 통해 블루투스(스마트폰)로 전송
   while(USART_GetFlagStatus(USART2, USART_FLAG_TXE) == RESET);
   USART_SendData(USART2, rvData);
}

void USART1_IRQHandler(void) { // USART1 인터럽트 핸들러
   if(USART_GetITStatus(USART1,USART_IT_RXNE) != RESET) {
      sendData_USART2();
      USART_ClearITPendingBit(USART1,USART_IT_RXNE);
      USART_ClearITPendingBit(USART2,USART_IT_TXE);
   }
}

void USART2_IRQHandler(void) { // USART2 인터럽트 핸들러
   if(USART_GetITStatus(USART2,USART_IT_RXNE) != RESET) {
      sendData_USART1();
      USART_ClearITPendingBit(USART2,USART_IT_RXNE);
      USART_ClearITPendingBit(USART1,USART_IT_TXE);
   }
}


int main() {
   GPIO_InitTypeDef gpA_TX, gpA_RX;
   USART_InitTypeDef usart, usart2;
   NVIC_InitTypeDef nvic_USART1, nvic_USART2;

   SystemInit();

   RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA |    RCC_APB2Periph_AFIO | RCC_APB2Periph_USART1, ENABLE);
   RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);

   // USART1 TX
   gpA_TX.GPIO_Pin = GPIO_Pin_9;
   gpA_TX.GPIO_Mode = GPIO_Mode_AF_PP;
   gpA_TX.GPIO_Speed = GPIO_Speed_50MHz;
   GPIO_Init(GPIOA, &gpA_TX);

   // USART1 RX
   gpA_RX.GPIO_Pin = GPIO_Pin_10;
   gpA_RX.GPIO_Mode = GPIO_Mode_IN_FLOATING;
   gpA_RX.GPIO_Speed = GPIO_Speed_50MHz;
   GPIO_Init(GPIOA, &gpA_RX);

   // USART2 TX
   gpA_TX.GPIO_Pin = GPIO_Pin_2;
   gpA_TX.GPIO_Mode = GPIO_Mode_AF_PP;
   gpA_TX.GPIO_Speed = GPIO_Speed_50MHz;
   GPIO_Init(GPIOA, &gpA_TX);

   // USART2 RX
   gpA_RX.GPIO_Pin = GPIO_Pin_3;
   gpA_RX.GPIO_Mode = GPIO_Mode_IN_FLOATING;
   gpA_RX.GPIO_Speed = GPIO_Speed_50MHz;
   GPIO_Init(GPIOA, &gpA_RX);

   // PC와 통신하기 위한 USART1 설정
   // Stopbit 1, WL 8, Parity 사용안함, BaudRate 57600 (USART2와 다르게)
   usart.USART_StopBits = USART_StopBits_1;
   usart.USART_WordLength = USART_WordLength_8b;
   usart.USART_Parity = USART_Parity_No;
   usart.USART_BaudRate = 9600;
   usart.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
   usart.USART_HardwareFlowControl = USART_HardwareFlowControl_None;

   USART_Init(USART1, &usart);
       USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
       USART_Cmd(USART1, ENABLE);

        // 블루투스 통신을 위한 USART2 설정
   // Stopbit 1, WL 8, Parity 사용안함, BaudRate 9600 (USART1과 다르게)
   usart2.USART_StopBits = USART_StopBits_1;
       usart2.USART_WordLength = USART_WordLength_8b;
   usart2.USART_Parity = USART_Parity_No;
   usart2.USART_BaudRate = 9600;
   usart2.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
   usart2.USART_HardwareFlowControl = USART_HardwareFlowControl_None;

   USART_Init(USART2, &usart2);
   USART_ITConfig(USART2, USART_IT_RXNE, ENABLE);
   USART_Cmd(USART2, ENABLE);

   nvic_USART1.NVIC_IRQChannel = USART1_IRQn;
       nvic_USART1.NVIC_IRQChannelCmd = ENABLE;
       nvic_USART1.NVIC_IRQChannelPreemptionPriority = 0;
      nvic_USART1.NVIC_IRQChannelSubPriority = 0;
       NVIC_Init(&nvic_USART1);

       nvic_USART2.NVIC_IRQChannel = USART2_IRQn;
   nvic_USART2.NVIC_IRQChannelCmd = ENABLE;
   nvic_USART2.NVIC_IRQChannelPreemptionPriority = 0;
   nvic_USART2.NVIC_IRQChannelSubPriority = 0;
   NVIC_Init(&nvic_USART2);

       while(1) {

       }

}

